// suppose we have 12345
impl Solution {
    fn helper(
        head: Option<Box<ListNode>>,
        reversed: Option<Box<ListNode>>,
    ) -> Option<Box<ListNode>> {
        if let Some(mut node) = head {
            // first iter head=1, rev=None, node=1, new_head=2, 1.next=none
            // second iter head=2, rev=1, node=2, new_head=3, 2.next=1
            // third iter head=3, rev=2, node=3, new_head=4, 3.next=2
            // ...
            let new_head = mem::replace(&mut node.next, reversed);
            // the genius here is that we ain't need any tmp right?
            Self::helper(new_head, Some(node))
        } else {
            reversed
        }
    }

    pub fn reverse_list(head: Option<Box<ListNode>>) -> Option<Box<ListNode>> {
        Self::helper(head, None)
    }
}